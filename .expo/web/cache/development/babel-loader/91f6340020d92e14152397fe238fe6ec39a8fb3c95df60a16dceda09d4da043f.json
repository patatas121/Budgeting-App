{"ast":null,"code":"import React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { AuthProvider, useAuth } from \"./src/context/AuthContext\";\nimport AuthNavigator from \"./src/navigation/AuthNavigator\";\nimport MainNavigator from \"./src/navigation/MainNavigator\";\nimport SplashScreen from \"./src/screens/SplashScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nfunction AppContent() {\n  var _useAuth = useAuth(),\n    user = _useAuth.user,\n    loading = _useAuth.loading;\n  var navigation = undefined;\n  if (loading) {\n    return _jsx(SplashScreen, {\n      navigation: navigation\n    });\n  }\n  return _jsx(NavigationContainer, {\n    children: _jsx(Stack.Navigator, {\n      screenOptions: {\n        headerStyle: {\n          backgroundColor: '#3b82f6'\n        },\n        headerTintColor: '#fff',\n        headerTitleStyle: {\n          fontWeight: 'bold'\n        }\n      },\n      children: user ? _jsx(Stack.Screen, {\n        name: \"MainApp\",\n        component: MainNavigator,\n        options: {\n          headerShown: false\n        }\n      }) : _jsx(Stack.Screen, {\n        name: \"Auth\",\n        component: AuthNavigator,\n        options: {\n          headerShown: false\n        }\n      })\n    })\n  });\n}\nexport default function App() {\n  return _jsx(AuthProvider, {\n    children: _jsx(AppContent, {})\n  });\n}","map":{"version":3,"names":["React","NavigationContainer","createNativeStackNavigator","AuthProvider","useAuth","AuthNavigator","MainNavigator","SplashScreen","jsx","_jsx","Stack","AppContent","_useAuth","user","loading","navigation","undefined","children","Navigator","screenOptions","headerStyle","backgroundColor","headerTintColor","headerTitleStyle","fontWeight","Screen","name","component","options","headerShown","App"],"sources":["C:/Users/DeVelizH_003/Documents/budget-app/App.tsx"],"sourcesContent":["import React from 'react';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport { AuthProvider, useAuth } from './src/context/AuthContext';\r\nimport AuthNavigator from './src/navigation/AuthNavigator';\r\nimport MainNavigator from './src/navigation/MainNavigator';\r\nimport SplashScreen from './src/screens/SplashScreen';\r\n\r\nconst Stack = createNativeStackNavigator();\r\n\r\nfunction AppContent() {\r\n  const { user, loading } = useAuth();\r\n\r\n  const navigation = undefined as any; // or use a mock navigation if needed\r\n  if (loading) {\r\n    return <SplashScreen navigation={navigation} />;\r\n  }\r\n\r\n  return (\r\n    <NavigationContainer>\r\n      <Stack.Navigator\r\n        screenOptions={{\r\n          headerStyle: {\r\n            backgroundColor: '#3b82f6',\r\n          },\r\n          headerTintColor: '#fff',\r\n          headerTitleStyle: {\r\n            fontWeight: 'bold',\r\n          },\r\n        }}\r\n      >\r\n        {user ? (\r\n          <Stack.Screen\r\n            name=\"MainApp\"\r\n            component={MainNavigator}\r\n            options={{ headerShown: false }}\r\n          />\r\n        ) : (\r\n          <Stack.Screen\r\n            name=\"Auth\"\r\n            component={AuthNavigator}\r\n            options={{ headerShown: false }}\r\n          />\r\n        )}\r\n      </Stack.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n}\r\n\r\nexport default function App() {\r\n  return (\r\n    <AuthProvider>\r\n      <AppContent />\r\n    </AuthProvider>\r\n  );\r\n}\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,0BAA0B,QAAQ,gCAAgC;AAC3E,SAASC,YAAY,EAAEC,OAAO;AAC9B,OAAOC,aAAa;AACpB,OAAOC,aAAa;AACpB,OAAOC,YAAY;AAAmC,SAAAC,GAAA,IAAAC,IAAA;AAEtD,IAAMC,KAAK,GAAGR,0BAA0B,CAAC,CAAC;AAE1C,SAASS,UAAUA,CAAA,EAAG;EACpB,IAAAC,QAAA,GAA0BR,OAAO,CAAC,CAAC;IAA3BS,IAAI,GAAAD,QAAA,CAAJC,IAAI;IAAEC,OAAO,GAAAF,QAAA,CAAPE,OAAO;EAErB,IAAMC,UAAU,GAAGC,SAAgB;EACnC,IAAIF,OAAO,EAAE;IACX,OAAOL,IAAA,CAACF,YAAY;MAACQ,UAAU,EAAEA;IAAW,CAAE,CAAC;EACjD;EAEA,OACEN,IAAA,CAACR,mBAAmB;IAAAgB,QAAA,EAClBR,IAAA,CAACC,KAAK,CAACQ,SAAS;MACdC,aAAa,EAAE;QACbC,WAAW,EAAE;UACXC,eAAe,EAAE;QACnB,CAAC;QACDC,eAAe,EAAE,MAAM;QACvBC,gBAAgB,EAAE;UAChBC,UAAU,EAAE;QACd;MACF,CAAE;MAAAP,QAAA,EAEDJ,IAAI,GACHJ,IAAA,CAACC,KAAK,CAACe,MAAM;QACXC,IAAI,EAAC,SAAS;QACdC,SAAS,EAAErB,aAAc;QACzBsB,OAAO,EAAE;UAAEC,WAAW,EAAE;QAAM;MAAE,CACjC,CAAC,GAEFpB,IAAA,CAACC,KAAK,CAACe,MAAM;QACXC,IAAI,EAAC,MAAM;QACXC,SAAS,EAAEtB,aAAc;QACzBuB,OAAO,EAAE;UAAEC,WAAW,EAAE;QAAM;MAAE,CACjC;IACF,CACc;EAAC,CACC,CAAC;AAE1B;AAEA,eAAe,SAASC,GAAGA,CAAA,EAAG;EAC5B,OACErB,IAAA,CAACN,YAAY;IAAAc,QAAA,EACXR,IAAA,CAACE,UAAU,IAAE;EAAC,CACF,CAAC;AAEnB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}