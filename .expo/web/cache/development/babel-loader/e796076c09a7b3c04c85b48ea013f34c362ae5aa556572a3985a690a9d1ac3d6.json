{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { NativeWindStyleSheet as _NativeWindStyleSheet } from \"nativewind\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { useAuth } from \"../context/AuthContext\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function SignupScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    confirmPassword = _useState6[0],\n    setConfirmPassword = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    isLoading = _useState8[0],\n    setIsLoading = _useState8[1];\n  var _useAuth = useAuth(),\n    signup = _useAuth.signup;\n  var handleSignup = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      if (password !== confirmPassword) {\n        Alert.alert('Error', 'Passwords do not match');\n        return;\n      }\n      setIsLoading(true);\n      try {\n        yield signup(email, password);\n        navigation.replace('Dashboard');\n      } catch (error) {\n        Alert.alert('Error', error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    });\n    return function handleSignup() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Create Account\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Email\",\n      value: email,\n      onChangeText: setEmail,\n      keyboardType: \"email-address\",\n      autoCapitalize: \"none\",\n      editable: !isLoading\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Password\",\n      value: password,\n      onChangeText: setPassword,\n      secureTextEntry: true,\n      editable: !isLoading\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Confirm Password\",\n      value: confirmPassword,\n      onChangeText: setConfirmPassword,\n      secureTextEntry: true,\n      editable: !isLoading\n    }), _jsx(TouchableOpacity, {\n      style: [styles.button, isLoading && styles.buttonDisabled],\n      onPress: handleSignup,\n      disabled: isLoading,\n      children: isLoading ? _jsx(ActivityIndicator, {\n        color: \"white\"\n      }) : _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Sign Up\"\n      })\n    }), _jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        return navigation.navigate('Login');\n      },\n      disabled: isLoading,\n      children: _jsx(Text, {\n        style: styles.linkText,\n        children: \"Already have an account? Log in\"\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    paddingHorizontal: 32,\n    backgroundColor: 'white'\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 32,\n    textAlign: 'center'\n  },\n  input: {\n    backgroundColor: '#f3f4f6',\n    padding: 16,\n    borderRadius: 8,\n    marginBottom: 16\n  },\n  button: {\n    backgroundColor: '#3b82f6',\n    padding: 16,\n    borderRadius: 8,\n    marginBottom: 16\n  },\n  buttonDisabled: {\n    opacity: 0.7\n  },\n  buttonText: {\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold'\n  },\n  linkText: {\n    color: '#3b82f6',\n    textAlign: 'center'\n  }\n});\n_NativeWindStyleSheet.create({\n  styles: {\n    \"container\": {\n      \"width\": \"100%\"\n    },\n    \"container@0\": {\n      \"maxWidth\": 640\n    },\n    \"container@1\": {\n      \"maxWidth\": 768\n    },\n    \"container@2\": {\n      \"maxWidth\": 1024\n    },\n    \"container@3\": {\n      \"maxWidth\": 1280\n    },\n    \"container@4\": {\n      \"maxWidth\": 1536\n    },\n    \"flex\": {\n      \"display\": \"flex\"\n    }\n  },\n  atRules: {\n    \"container\": [[[\"media\", \"(min-width: 640px)\"]], [[\"media\", \"(min-width: 768px)\"]], [[\"media\", \"(min-width: 1024px)\"]], [[\"media\", \"(min-width: 1280px)\"]], [[\"media\", \"(min-width: 1536px)\"]]]\n  },\n  topics: {\n    \"container\": [\"width\"]\n  }\n});","map":{"version":3,"names":["React","useState","View","Text","TextInput","TouchableOpacity","Alert","ActivityIndicator","StyleSheet","useAuth","jsx","_jsx","jsxs","_jsxs","SignupScreen","_ref","navigation","_useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","_useState5","_useState6","confirmPassword","setConfirmPassword","_useState7","_useState8","isLoading","setIsLoading","_useAuth","signup","handleSignup","_ref2","_asyncToGenerator","alert","replace","error","message","apply","arguments","style","styles","container","children","title","input","placeholder","value","onChangeText","keyboardType","autoCapitalize","editable","secureTextEntry","button","buttonDisabled","onPress","disabled","color","buttonText","navigate","linkText","create","flex","justifyContent","paddingHorizontal","backgroundColor","fontSize","fontWeight","marginBottom","textAlign","padding","borderRadius","opacity","_NativeWindStyleSheet","atRules","topics"],"sources":["C:/Users/DeVelizH_003/Documents/budget-app/src/screens/SignupScreen.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, TextInput, TouchableOpacity, Alert, ActivityIndicator, StyleSheet } from 'react-native';\r\nimport { useAuth } from '../context/AuthContext';\r\nimport { NativeStackNavigationProp } from '@react-navigation/native-stack';\r\nimport { RootStackParamList } from '../types/navigation';\r\n\r\ntype Props = {\r\n  navigation: NativeStackNavigationProp<RootStackParamList, 'Signup'>;\r\n};\r\n\r\nexport default function SignupScreen({ navigation }: Props) {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const { signup } = useAuth();\r\n\r\n  const handleSignup = async () => {\r\n    if (password !== confirmPassword) {\r\n      Alert.alert('Error', 'Passwords do not match');\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n    try {\r\n      await signup(email, password);\r\n      navigation.replace('Dashboard');\r\n    } catch (error: any) {\r\n      Alert.alert('Error', error.message);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.title}>Create Account</Text>\r\n      \r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder=\"Email\"\r\n        value={email}\r\n        onChangeText={setEmail}\r\n        keyboardType=\"email-address\"\r\n        autoCapitalize=\"none\"\r\n        editable={!isLoading}\r\n      />\r\n\r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder=\"Password\"\r\n        value={password}\r\n        onChangeText={setPassword}\r\n        secureTextEntry\r\n        editable={!isLoading}\r\n      />\r\n\r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder=\"Confirm Password\"\r\n        value={confirmPassword}\r\n        onChangeText={setConfirmPassword}\r\n        secureTextEntry\r\n        editable={!isLoading}\r\n      />\r\n      \r\n      <TouchableOpacity\r\n        style={[styles.button, isLoading && styles.buttonDisabled]}\r\n        onPress={handleSignup}\r\n        disabled={isLoading}\r\n      >\r\n        {isLoading ? (\r\n          <ActivityIndicator color=\"white\" />\r\n        ) : (\r\n          <Text style={styles.buttonText}>Sign Up</Text>\r\n        )}\r\n      </TouchableOpacity>\r\n\r\n      <TouchableOpacity\r\n        onPress={() => navigation.navigate('Login')}\r\n        disabled={isLoading}\r\n      >\r\n        <Text style={styles.linkText}>\r\n          Already have an account? Log in\r\n        </Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    paddingHorizontal: 32,\r\n    backgroundColor: 'white',\r\n  },\r\n  title: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    marginBottom: 32,\r\n    textAlign: 'center',\r\n  },\r\n  input: {\r\n    backgroundColor: '#f3f4f6',\r\n    padding: 16,\r\n    borderRadius: 8,\r\n    marginBottom: 16,\r\n  },\r\n  button: {\r\n    backgroundColor: '#3b82f6',\r\n    padding: 16,\r\n    borderRadius: 8,\r\n    marginBottom: 16,\r\n  },\r\n  buttonDisabled: {\r\n    opacity: 0.7,\r\n  },\r\n  buttonText: {\r\n    color: 'white',\r\n    textAlign: 'center',\r\n    fontWeight: 'bold',\r\n  },\r\n  linkText: {\r\n    color: '#3b82f6',\r\n    textAlign: 'center',\r\n  },\r\n});\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,iBAAA;AAAA,OAAAC,UAAA;AAExC,SAASC,OAAO;AAAiC,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAQjD,eAAe,SAASC,YAAYA,CAAAC,IAAA,EAAwB;EAAA,IAArBC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EAC/C,IAAAC,SAAA,GAA0BhB,QAAQ,CAAC,EAAE,CAAC;IAAAiB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA/BG,KAAK,GAAAF,UAAA;IAAEG,QAAQ,GAAAH,UAAA;EACtB,IAAAI,UAAA,GAAgCrB,QAAQ,CAAC,EAAE,CAAC;IAAAsB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAArCE,QAAQ,GAAAD,UAAA;IAAEE,WAAW,GAAAF,UAAA;EAC5B,IAAAG,UAAA,GAA8CzB,QAAQ,CAAC,EAAE,CAAC;IAAA0B,UAAA,GAAAR,cAAA,CAAAO,UAAA;IAAnDE,eAAe,GAAAD,UAAA;IAAEE,kBAAkB,GAAAF,UAAA;EAC1C,IAAAG,UAAA,GAAkC7B,QAAQ,CAAC,KAAK,CAAC;IAAA8B,UAAA,GAAAZ,cAAA,CAAAW,UAAA;IAA1CE,SAAS,GAAAD,UAAA;IAAEE,YAAY,GAAAF,UAAA;EAC9B,IAAAG,QAAA,GAAmBzB,OAAO,CAAC,CAAC;IAApB0B,MAAM,GAAAD,QAAA,CAANC,MAAM;EAEd,IAAMC,YAAY;IAAA,IAAAC,KAAA,GAAAC,iBAAA,CAAG,aAAY;MAC/B,IAAId,QAAQ,KAAKI,eAAe,EAAE;QAChCtB,KAAK,CAACiC,KAAK,CAAC,OAAO,EAAE,wBAAwB,CAAC;QAC9C;MACF;MAEAN,YAAY,CAAC,IAAI,CAAC;MAClB,IAAI;QACF,MAAME,MAAM,CAACf,KAAK,EAAEI,QAAQ,CAAC;QAC7BR,UAAU,CAACwB,OAAO,CAAC,WAAW,CAAC;MACjC,CAAC,CAAC,OAAOC,KAAU,EAAE;QACnBnC,KAAK,CAACiC,KAAK,CAAC,OAAO,EAAEE,KAAK,CAACC,OAAO,CAAC;MACrC,CAAC,SAAS;QACRT,YAAY,CAAC,KAAK,CAAC;MACrB;IACF,CAAC;IAAA,gBAfKG,YAAYA,CAAA;MAAA,OAAAC,KAAA,CAAAM,KAAA,OAAAC,SAAA;IAAA;EAAA,GAejB;EAED,OACE/B,KAAA,CAACX,IAAI;IAAC2C,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC5BrC,IAAA,CAACR,IAAI;MAAC0C,KAAK,EAAEC,MAAM,CAACG,KAAM;MAAAD,QAAA,EAAC;IAAc,CAAM,CAAC,EAEhDrC,IAAA,CAACP,SAAS;MACRyC,KAAK,EAAEC,MAAM,CAACI,KAAM;MACpBC,WAAW,EAAC,OAAO;MACnBC,KAAK,EAAEhC,KAAM;MACbiC,YAAY,EAAEhC,QAAS;MACvBiC,YAAY,EAAC,eAAe;MAC5BC,cAAc,EAAC,MAAM;MACrBC,QAAQ,EAAE,CAACxB;IAAU,CACtB,CAAC,EAEFrB,IAAA,CAACP,SAAS;MACRyC,KAAK,EAAEC,MAAM,CAACI,KAAM;MACpBC,WAAW,EAAC,UAAU;MACtBC,KAAK,EAAE5B,QAAS;MAChB6B,YAAY,EAAE5B,WAAY;MAC1BgC,eAAe;MACfD,QAAQ,EAAE,CAACxB;IAAU,CACtB,CAAC,EAEFrB,IAAA,CAACP,SAAS;MACRyC,KAAK,EAAEC,MAAM,CAACI,KAAM;MACpBC,WAAW,EAAC,kBAAkB;MAC9BC,KAAK,EAAExB,eAAgB;MACvByB,YAAY,EAAExB,kBAAmB;MACjC4B,eAAe;MACfD,QAAQ,EAAE,CAACxB;IAAU,CACtB,CAAC,EAEFrB,IAAA,CAACN,gBAAgB;MACfwC,KAAK,EAAE,CAACC,MAAM,CAACY,MAAM,EAAE1B,SAAS,IAAIc,MAAM,CAACa,cAAc,CAAE;MAC3DC,OAAO,EAAExB,YAAa;MACtByB,QAAQ,EAAE7B,SAAU;MAAAgB,QAAA,EAEnBhB,SAAS,GACRrB,IAAA,CAACJ,iBAAiB;QAACuD,KAAK,EAAC;MAAO,CAAE,CAAC,GAEnCnD,IAAA,CAACR,IAAI;QAAC0C,KAAK,EAAEC,MAAM,CAACiB,UAAW;QAAAf,QAAA,EAAC;MAAO,CAAM;IAC9C,CACe,CAAC,EAEnBrC,IAAA,CAACN,gBAAgB;MACfuD,OAAO,EAAE,SAATA,OAAOA,CAAA;QAAA,OAAQ5C,UAAU,CAACgD,QAAQ,CAAC,OAAO,CAAC;MAAA,CAAC;MAC5CH,QAAQ,EAAE7B,SAAU;MAAAgB,QAAA,EAEpBrC,IAAA,CAACR,IAAI;QAAC0C,KAAK,EAAEC,MAAM,CAACmB,QAAS;QAAAjB,QAAA,EAAC;MAE9B,CAAM;IAAC,CACS,CAAC;EAAA,CACf,CAAC;AAEX;AAEA,IAAMF,MAAM,GAAGtC,UAAU,CAAC0D,MAAM,CAAC;EAC/BnB,SAAS,EAAE;IACToB,IAAI,EAAE,CAAC;IACPC,cAAc,EAAE,QAAQ;IACxBC,iBAAiB,EAAE,EAAE;IACrBC,eAAe,EAAE;EACnB,CAAC;EACDrB,KAAK,EAAE;IACLsB,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBC,YAAY,EAAE,EAAE;IAChBC,SAAS,EAAE;EACb,CAAC;EACDxB,KAAK,EAAE;IACLoB,eAAe,EAAE,SAAS;IAC1BK,OAAO,EAAE,EAAE;IACXC,YAAY,EAAE,CAAC;IACfH,YAAY,EAAE;EAChB,CAAC;EACDf,MAAM,EAAE;IACNY,eAAe,EAAE,SAAS;IAC1BK,OAAO,EAAE,EAAE;IACXC,YAAY,EAAE,CAAC;IACfH,YAAY,EAAE;EAChB,CAAC;EACDd,cAAc,EAAE;IACdkB,OAAO,EAAE;EACX,CAAC;EACDd,UAAU,EAAE;IACVD,KAAK,EAAE,OAAO;IACdY,SAAS,EAAE,QAAQ;IACnBF,UAAU,EAAE;EACd,CAAC;EACDP,QAAQ,EAAE;IACRH,KAAK,EAAE,SAAS;IAChBY,SAAS,EAAE;EACb;AACF,CAAC,CAAC;AAACI,qBAAA,CAAAZ,MAAA;EAAApB,MAAA;IAAA;MAAA;IAAA;IAAA;MAAA;IAAA;IAAA;MAAA;IAAA;IAAA;MAAA;IAAA;IAAA;MAAA;IAAA;IAAA;MAAA;IAAA;IAAA;MAAA;IAAA;EAAA;EAAAiC,OAAA;IAAA;EAAA;EAAAC,MAAA;IAAA;EAAA;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}