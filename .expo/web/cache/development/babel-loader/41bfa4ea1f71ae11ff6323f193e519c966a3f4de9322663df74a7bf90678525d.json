{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { NativeWindStyleSheet as _NativeWindStyleSheet } from \"nativewind\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport BarChart from \"../components/BarChart\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar colors = {\n  azureRadiance: {\n    50: '#eff5ff',\n    100: '#dbe8fe',\n    200: '#bfd7fe',\n    300: '#93bbfd',\n    400: '#609afa',\n    500: '#3b82f6',\n    600: '#2570eb',\n    700: '#1d64d8',\n    800: '#1e55af',\n    900: '#1e478a',\n    950: '#172e54'\n  }\n};\nexport default function AnalyticsScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState('monthly'),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedPeriod = _useState2[0],\n    setSelectedPeriod = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isLoadingChart = _useState4[0],\n    setIsLoadingChart = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isLoadingInsights = _useState6[0],\n    setIsLoadingInsights = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    isLoadingExpenses = _useState8[0],\n    setIsLoadingExpenses = _useState8[1];\n  var timePeriods = [{\n    key: 'yearly',\n    label: 'Yearly'\n  }, {\n    key: 'monthly',\n    label: 'Monthly'\n  }, {\n    key: 'weekly',\n    label: 'Weekly'\n  }, {\n    key: 'daily',\n    label: 'Daily'\n  }];\n  var handlePeriodChange = function handlePeriodChange(period) {\n    if (period !== selectedPeriod) {\n      setIsLoadingChart(true);\n      setIsLoadingInsights(true);\n      setIsLoadingExpenses(true);\n      setSelectedPeriod(period);\n      setTimeout(function () {\n        setIsLoadingChart(false);\n      }, 600);\n      setTimeout(function () {\n        setIsLoadingInsights(false);\n      }, 900);\n      setTimeout(function () {\n        setIsLoadingExpenses(false);\n      }, 1200);\n    }\n  };\n  var getInsightData = function getInsightData(period) {\n    var labels = {\n      yearly: ['Last Year', 'This Year'],\n      monthly: ['Last Month', 'This Month'],\n      weekly: ['Last Week', 'This Week'],\n      daily: ['Yesterday', 'Today']\n    };\n    var multipliers = {\n      yearly: 1000,\n      monthly: 100,\n      weekly: 10,\n      daily: 1\n    };\n    var m = multipliers[period];\n    return {\n      foodDining: {\n        change: 23,\n        direction: 'increased',\n        lastPeriod: 21.5 * m,\n        thisPeriod: 26.45 * m,\n        periodLabel: labels[period][0],\n        currentLabel: labels[period][1]\n      },\n      salary: {\n        lastPeriod: 185 * m,\n        thisPeriod: 192 * m,\n        periodLabel: labels[period][0],\n        currentLabel: labels[period][1]\n      },\n      transportation: {\n        change: 15,\n        direction: 'decreased',\n        lastPeriod: 18 * m,\n        thisPeriod: 15.3 * m,\n        periodLabel: labels[period][0],\n        currentLabel: labels[period][1]\n      }\n    };\n  };\n  var getExpenseData = function getExpenseData(period) {\n    var categories = [{\n      name: 'Food & Dining',\n      icon: 'restaurant',\n      color: '#ef4444'\n    }, {\n      name: 'Transportation',\n      icon: 'car',\n      color: '#3b82f6'\n    }, {\n      name: 'Shopping',\n      icon: 'bag',\n      color: '#8b5cf6'\n    }, {\n      name: 'Entertainment',\n      icon: 'game-controller',\n      color: '#f59e0b'\n    }, {\n      name: 'Healthcare',\n      icon: 'medical',\n      color: '#10b981'\n    }, {\n      name: 'Utilities',\n      icon: 'flash',\n      color: '#6b7280'\n    }];\n    var baseAmounts = {\n      yearly: [30444, 16848, 24000, 18000, 12000, 15600],\n      monthly: [2645, 1530, 2100, 1500, 1000, 1300],\n      weekly: [605, 386, 480, 350, 230, 300],\n      daily: [115, 45, 80, 50, 0, 0]\n    };\n    var baseTrans = {\n      yearly: [365, 280, 96, 72, 24, 12],\n      monthly: [28, 22, 8, 6, 2, 1],\n      weekly: [7, 5, 2, 1, 1, 1],\n      daily: [3, 2, 1, 1, 0, 0]\n    };\n    var amounts = baseAmounts[period];\n    var transactions = baseTrans[period];\n    var maxAmount = Math.max.apply(Math, _toConsumableArray(amounts));\n    return categories.map(function (cat, i) {\n      return {\n        category: cat.name,\n        amount: amounts[i],\n        transactions: transactions[i],\n        icon: cat.icon,\n        color: cat.color,\n        percentage: maxAmount > 0 ? amounts[i] / maxAmount * 100 : 0\n      };\n    }).sort(function (a, b) {\n      return b.amount - a.amount;\n    });\n  };\n  var generateHistoricalData = function generateHistoricalData(period) {\n    var baseData = {\n      yearly: [48000, 36000],\n      monthly: [4000, 3000],\n      weekly: [900, 700],\n      daily: [130, 100]\n    };\n    var _baseData$period = _slicedToArray(baseData[period], 2),\n      income = _baseData$period[0],\n      expenses = _baseData$period[1];\n    return Array.from({\n      length: 6\n    }, function (_, i) {\n      var variance = 0.8 + Math.random() * 0.4;\n      var periodName = period === 'yearly' ? \"\" + (new Date().getFullYear() - (5 - i)) : period === 'monthly' ? new Date(Date.now() - (5 - i) * 30 * 24 * 60 * 60 * 1000).toLocaleDateString('en', {\n        month: 'short'\n      }) : period === 'weekly' ? \"W\" + Math.max(1, new Date().getWeek() - (5 - i)) : new Date(Date.now() - (5 - i) * 24 * 60 * 60 * 1000).toLocaleDateString('en', {\n        weekday: 'short'\n      });\n      return {\n        period: periodName,\n        income: Math.round(income * variance),\n        expenses: Math.round(expenses * variance)\n      };\n    });\n  };\n  var historicalData = generateHistoricalData(selectedPeriod);\n  var maxValue = Math.max.apply(Math, _toConsumableArray(historicalData.flatMap(function (d) {\n    return [d.income, d.expenses];\n  }))) * 1.1;\n  var insightData = getInsightData(selectedPeriod);\n  var expenseData = getExpenseData(selectedPeriod);\n  var SkeletonRect = function SkeletonRect(_ref2) {\n    var width = _ref2.width,\n      height = _ref2.height,\n      style = _ref2.style;\n    return _jsx(View, {\n      style: [{\n        width: width,\n        height: height,\n        backgroundColor: colors.azureRadiance[100],\n        borderRadius: 8\n      }, style]\n    });\n  };\n  var ChartSkeleton = function ChartSkeleton() {\n    return _jsxs(View, {\n      style: styles.chartCard,\n      children: [_jsx(SkeletonRect, {\n        width: \"60%\",\n        height: 20,\n        style: {\n          alignSelf: 'center',\n          marginBottom: 20\n        }\n      }), _jsx(View, {\n        style: {\n          height: 200,\n          justifyContent: 'flex-end',\n          flexDirection: 'row',\n          alignItems: 'flex-end',\n          paddingHorizontal: 20\n        },\n        children: Array(6).fill(0).map(function (_, i) {\n          return _jsxs(View, {\n            style: {\n              flex: 1,\n              alignItems: 'center',\n              marginHorizontal: 4\n            },\n            children: [_jsx(SkeletonRect, {\n              width: \"70%\",\n              height: 60 + Math.random() * 80,\n              style: {\n                marginBottom: 8\n              }\n            }), _jsx(SkeletonRect, {\n              width: \"80%\",\n              height: 40 + Math.random() * 60\n            })]\n          }, i);\n        })\n      }), _jsx(View, {\n        style: styles.chartLegend,\n        children: ['Income', 'Expenses'].map(function (label, i) {\n          return _jsxs(View, {\n            style: styles.legendItem,\n            children: [_jsx(SkeletonRect, {\n              width: 12,\n              height: 12,\n              style: {\n                borderRadius: 6,\n                marginRight: 8\n              }\n            }), _jsx(SkeletonRect, {\n              width: 50 + i * 10,\n              height: 12\n            })]\n          }, label);\n        })\n      })]\n    });\n  };\n  var InsightCardSkeleton = function InsightCardSkeleton() {\n    return _jsxs(View, {\n      style: styles.insightCard,\n      children: [_jsxs(View, {\n        style: styles.cardHeader,\n        children: [_jsx(SkeletonRect, {\n          width: 40,\n          height: 40,\n          style: {\n            borderRadius: 20,\n            marginRight: 12\n          }\n        }), _jsxs(View, {\n          style: {\n            flex: 1\n          },\n          children: [_jsx(SkeletonRect, {\n            width: \"70%\",\n            height: 16,\n            style: {\n              marginBottom: 8\n            }\n          }), _jsx(SkeletonRect, {\n            width: \"50%\",\n            height: 14\n          })]\n        })]\n      }), _jsx(SkeletonRect, {\n        width: \"100%\",\n        height: 14,\n        style: {\n          marginBottom: 16\n        }\n      }), _jsx(View, {\n        style: styles.comparisonContainer,\n        children: [0, 1].map(function (i) {\n          return _jsxs(React.Fragment, {\n            children: [_jsxs(View, {\n              style: styles.comparisonItem,\n              children: [_jsx(SkeletonRect, {\n                width: \"80%\",\n                height: 12,\n                style: {\n                  marginBottom: 4\n                }\n              }), _jsx(SkeletonRect, {\n                width: \"60%\",\n                height: 16\n              })]\n            }), i === 0 && _jsx(View, {\n              style: styles.comparisonDivider\n            })]\n          }, i);\n        })\n      })]\n    });\n  };\n  var ExpenseItemSkeleton = function ExpenseItemSkeleton() {\n    return _jsxs(View, {\n      style: styles.expenseItem,\n      children: [_jsx(SkeletonRect, {\n        width: 48,\n        height: 48,\n        style: {\n          borderRadius: 24,\n          marginRight: 16\n        }\n      }), _jsxs(View, {\n        style: styles.expenseDetails,\n        children: [_jsxs(View, {\n          style: styles.expenseHeader,\n          children: [_jsx(SkeletonRect, {\n            width: \"60%\",\n            height: 16\n          }), _jsx(SkeletonRect, {\n            width: \"25%\",\n            height: 16\n          })]\n        }), _jsxs(View, {\n          style: styles.expenseProgressContainer,\n          children: [_jsx(SkeletonRect, {\n            width: \"80%\",\n            height: 6,\n            style: {\n              borderRadius: 3,\n              marginRight: 12\n            }\n          }), _jsx(SkeletonRect, {\n            width: 20,\n            height: 12\n          })]\n        })]\n      })]\n    });\n  };\n  var renderInsightCard = function renderInsightCard(data, icon, bgColor, title, subtitle, textColor) {\n    return _jsxs(View, {\n      style: styles.insightCard,\n      children: [_jsxs(View, {\n        style: styles.cardHeader,\n        children: [_jsx(View, {\n          style: [styles.categoryIconContainer, {\n            backgroundColor: bgColor\n          }],\n          children: _jsx(Ionicons, {\n            name: icon,\n            size: 20,\n            color: textColor || '#ef4444'\n          })\n        }), _jsxs(View, {\n          style: styles.cardHeaderText,\n          children: [_jsx(Text, {\n            style: styles.cardTitle,\n            children: title\n          }), _jsx(Text, {\n            style: [styles.changeIndicator, textColor && {\n              color: textColor\n            }],\n            children: subtitle\n          })]\n        })]\n      }), _jsx(Text, {\n        style: styles.cardSubtitle,\n        children: title === 'Salary & Wages' ? \"Your primary income source this \" + selectedPeriod.replace('ly', '').replace('y', '') + \", contributing 85% of total earnings\" : (title === 'Transportation' ? (data.direction === 'decreased' ? 'Great job!' : 'Watch out!') + ' Your' : 'Your') + \" \" + title + \" expenses \" + data.direction + \" by \" + data.change + \"% this \" + selectedPeriod.replace('ly', '').replace('y', '')\n      }), _jsxs(View, {\n        style: styles.comparisonContainer,\n        children: [_jsxs(View, {\n          style: styles.comparisonItem,\n          children: [_jsx(Text, {\n            style: styles.comparisonLabel,\n            children: data.periodLabel\n          }), _jsxs(Text, {\n            style: styles.comparisonAmount,\n            children: [\"\\u20B1\", data.lastPeriod.toLocaleString()]\n          })]\n        }), _jsx(View, {\n          style: styles.comparisonDivider\n        }), _jsxs(View, {\n          style: styles.comparisonItem,\n          children: [_jsx(Text, {\n            style: styles.comparisonLabel,\n            children: data.currentLabel\n          }), _jsxs(Text, {\n            style: [styles.comparisonAmount, {\n              color: textColor || (data.direction === 'increased' ? '#ef4444' : '#10b981')\n            }],\n            children: [\"\\u20B1\", data.thisPeriod.toLocaleString()]\n          })]\n        })]\n      })]\n    });\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.header,\n      children: [_jsx(TouchableOpacity, {\n        style: styles.backButton,\n        onPress: function onPress() {\n          return navigation.goBack();\n        },\n        children: _jsx(Ionicons, {\n          name: \"arrow-back\",\n          size: 24,\n          color: colors.azureRadiance[600]\n        })\n      }), _jsx(Text, {\n        style: styles.headerTitle,\n        children: \"Analytics\"\n      }), _jsx(View, {\n        style: styles.placeholder\n      })]\n    }), _jsx(View, {\n      style: styles.periodSelectorContainer,\n      children: _jsx(View, {\n        style: styles.periodSelector,\n        children: timePeriods.map(function (period) {\n          return _jsx(TouchableOpacity, {\n            style: [styles.periodButton, selectedPeriod === period.key && styles.activePeriod],\n            onPress: function onPress() {\n              return handlePeriodChange(period.key);\n            },\n            children: _jsx(Text, {\n              style: [styles.periodText, selectedPeriod === period.key && styles.activePeriodText],\n              children: period.label\n            })\n          }, period.key);\n        })\n      })\n    }), _jsxs(ScrollView, {\n      style: {\n        flex: 1\n      },\n      children: [isLoadingChart ? _jsx(ChartSkeleton, {}) : _jsxs(View, {\n        style: styles.chartCard,\n        children: [_jsx(Text, {\n          style: styles.chartTitle,\n          children: \"Income vs Expenses Trend\"\n        }), _jsx(BarChart, {\n          data: historicalData,\n          maxValue: maxValue,\n          selectedPeriod: selectedPeriod\n        }), _jsx(View, {\n          style: styles.chartLegend,\n          children: [{\n            color: '#10b981',\n            label: 'Income'\n          }, {\n            color: '#ef4444',\n            label: 'Expenses'\n          }].map(function (item) {\n            return _jsxs(View, {\n              style: styles.legendItem,\n              children: [_jsx(View, {\n                style: [styles.legendColor, {\n                  backgroundColor: item.color\n                }]\n              }), _jsx(Text, {\n                style: styles.legendText,\n                children: item.label\n              })]\n            }, item.label);\n          })\n        })]\n      }), isLoadingInsights ? _jsxs(View, {\n        style: styles.insightsSection,\n        children: [_jsx(SkeletonRect, {\n          width: \"40%\",\n          height: 20,\n          style: {\n            marginBottom: 16\n          }\n        }), Array(3).fill(0).map(function (_, i) {\n          return _jsx(InsightCardSkeleton, {}, i);\n        })]\n      }) : _jsxs(View, {\n        style: styles.insightsSection,\n        children: [_jsx(Text, {\n          style: styles.insightsHeading,\n          children: \"Spending Insights\"\n        }), renderInsightCard(insightData.foodDining, 'restaurant', '#fef2f2', 'Food & Dining', (insightData.foodDining.direction === 'increased' ? '↗ Increased' : '↘ Decreased') + \" by \" + insightData.foodDining.change + \"%\"), renderInsightCard(insightData.salary, 'briefcase', '#f0fdf4', 'Salary & Wages', 'Largest Income', '#10b981'), renderInsightCard(insightData.transportation, 'car', '#f0f9ff', 'Transportation', (insightData.transportation.direction === 'increased' ? '↗ Increased' : '↘ Decreased') + \" by \" + insightData.transportation.change + \"%\", colors.azureRadiance[500])]\n      }), isLoadingExpenses ? _jsxs(View, {\n        style: styles.insightsSection,\n        children: [_jsx(SkeletonRect, {\n          width: \"60%\",\n          height: 20,\n          style: {\n            marginBottom: 16\n          }\n        }), Array(6).fill(0).map(function (_, index) {\n          return _jsx(ExpenseItemSkeleton, {}, index);\n        })]\n      }) : _jsxs(View, {\n        style: styles.insightsSection,\n        children: [_jsxs(Text, {\n          style: styles.insightsHeading,\n          children: [\"Your \", selectedPeriod.charAt(0).toUpperCase() + selectedPeriod.slice(1), \" Expenses\"]\n        }), expenseData.map(function (expense, index) {\n          return _jsxs(View, {\n            style: [styles.expenseItem, index === expenseData.length - 1 && {\n              marginBottom: 0\n            }],\n            children: [_jsx(View, {\n              style: [styles.expenseIconContainer, {\n                backgroundColor: expense.color + \"15\"\n              }],\n              children: _jsx(Ionicons, {\n                name: expense.icon,\n                size: 24,\n                color: expense.color\n              })\n            }), _jsxs(View, {\n              style: styles.expenseDetails,\n              children: [_jsxs(View, {\n                style: styles.expenseHeader,\n                children: [_jsx(Text, {\n                  style: styles.expenseCategoryName,\n                  children: expense.category\n                }), _jsxs(Text, {\n                  style: styles.expenseAmount,\n                  children: [\"\\u20B1\", expense.amount.toLocaleString()]\n                })]\n              }), _jsxs(View, {\n                style: styles.expenseProgressContainer,\n                children: [_jsx(View, {\n                  style: styles.progressBarBackground,\n                  children: _jsx(View, {\n                    style: [styles.progressBarFill, {\n                      width: expense.percentage + \"%\",\n                      backgroundColor: expense.color\n                    }]\n                  })\n                }), _jsx(Text, {\n                  style: styles.transactionCount,\n                  children: expense.transactions\n                })]\n              })]\n            })]\n          }, expense.category);\n        })]\n      })]\n    })]\n  });\n}\nDate.prototype.getWeek = function () {\n  var onejan = new Date(this.getFullYear(), 0, 1);\n  return Math.ceil(((this.getTime() - onejan.getTime()) / 86400000 + onejan.getDay() + 1) / 7);\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#eff5ff'\n  },\n  header: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    borderBottomWidth: 1,\n    borderBottomColor: colors.azureRadiance[100],\n    paddingHorizontal: 16,\n    paddingTop: 60,\n    paddingBottom: 20,\n    backgroundColor: 'white'\n  },\n  backButton: {\n    width: 40,\n    height: 40,\n    borderRadius: 20,\n    backgroundColor: colors.azureRadiance[50],\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  headerTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: colors.azureRadiance[900]\n  },\n  placeholder: {\n    width: 40\n  },\n  periodSelectorContainer: {\n    backgroundColor: 'white',\n    paddingHorizontal: 0,\n    paddingVertical: 16,\n    borderBottomWidth: 1,\n    borderBottomColor: colors.azureRadiance[100]\n  },\n  periodSelector: {\n    flexDirection: 'row',\n    marginHorizontal: 16,\n    backgroundColor: colors.azureRadiance[50],\n    borderRadius: 8,\n    padding: 4\n  },\n  periodButton: {\n    flex: 1,\n    paddingVertical: 8,\n    alignItems: 'center',\n    borderRadius: 6\n  },\n  activePeriod: {\n    backgroundColor: colors.azureRadiance[500]\n  },\n  periodText: {\n    fontSize: 14,\n    color: '#6b7280'\n  },\n  activePeriodText: {\n    color: 'white',\n    fontWeight: '600'\n  },\n  chartCard: {\n    margin: 16,\n    padding: 20,\n    backgroundColor: '#ffffff',\n    borderRadius: 16,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 3\n  },\n  chartTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 16,\n    textAlign: 'center',\n    color: colors.azureRadiance[700]\n  },\n  chartLegend: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    marginTop: 16\n  },\n  legendItem: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  legendColor: {\n    width: 12,\n    height: 12,\n    borderRadius: 6,\n    marginRight: 8\n  },\n  legendText: {\n    fontSize: 12,\n    color: '#6b7280'\n  },\n  insightsSection: {\n    backgroundColor: '#ffffff',\n    borderRadius: 16,\n    margin: 16,\n    padding: 20\n  },\n  insightsHeading: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: '#000',\n    marginBottom: 16\n  },\n  insightCard: {\n    backgroundColor: '#ffffff',\n    borderRadius: 12,\n    padding: 16,\n    marginBottom: 12,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.1,\n    shadowRadius: 3.84,\n    elevation: 5\n  },\n  cardHeader: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 12\n  },\n  categoryIconContainer: {\n    width: 40,\n    height: 40,\n    borderRadius: 20,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginRight: 12\n  },\n  cardHeaderText: {\n    flex: 1\n  },\n  cardTitle: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: '#1f2937',\n    marginBottom: 4\n  },\n  changeIndicator: {\n    fontSize: 14,\n    fontWeight: '500',\n    color: '#ef4444'\n  },\n  cardSubtitle: {\n    fontSize: 14,\n    color: '#6b7280',\n    marginBottom: 16\n  },\n  comparisonContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  },\n  comparisonItem: {\n    flex: 1,\n    alignItems: 'center'\n  },\n  comparisonLabel: {\n    fontSize: 12,\n    color: '#9ca3af',\n    marginBottom: 4\n  },\n  comparisonAmount: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: '#1f2937'\n  },\n  comparisonDivider: {\n    width: 1,\n    height: 30,\n    backgroundColor: '#e5e7eb',\n    marginHorizontal: 16\n  },\n  expenseItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 16\n  },\n  expenseIconContainer: {\n    width: 48,\n    height: 48,\n    borderRadius: 24,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginRight: 16\n  },\n  expenseDetails: {\n    flex: 1\n  },\n  expenseHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 8\n  },\n  expenseCategoryName: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: '#1f2937'\n  },\n  expenseAmount: {\n    fontSize: 16,\n    fontWeight: '700',\n    color: '#1f2937'\n  },\n  expenseProgressContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  },\n  progressBarBackground: {\n    flex: 1,\n    height: 6,\n    backgroundColor: '#f3f4f6',\n    borderRadius: 3,\n    marginRight: 12,\n    overflow: 'hidden'\n  },\n  progressBarFill: {\n    height: '100%',\n    borderRadius: 3\n  },\n  transactionCount: {\n    fontSize: 12,\n    color: '#9ca3af',\n    fontWeight: '500'\n  }\n});\n_NativeWindStyleSheet.create({\n  styles: {\n    \"container\": {\n      \"width\": \"100%\"\n    },\n    \"container@0\": {\n      \"maxWidth\": 640\n    },\n    \"container@1\": {\n      \"maxWidth\": 768\n    },\n    \"container@2\": {\n      \"maxWidth\": 1024\n    },\n    \"container@3\": {\n      \"maxWidth\": 1280\n    },\n    \"container@4\": {\n      \"maxWidth\": 1536\n    },\n    \"flex\": {\n      \"display\": \"flex\"\n    },\n    \"hidden\": {\n      \"display\": \"none\"\n    },\n    \"elevation\": {\n      \"elevation\": 3\n    }\n  },\n  atRules: {\n    \"container\": [[[\"media\", \"(min-width: 640px)\"]], [[\"media\", \"(min-width: 768px)\"]], [[\"media\", \"(min-width: 1024px)\"]], [[\"media\", \"(min-width: 1280px)\"]], [[\"media\", \"(min-width: 1536px)\"]]]\n  },\n  topics: {\n    \"container\": [\"width\"]\n  }\n});","map":{"version":3,"names":["React","useState","View","Text","StyleSheet","ScrollView","TouchableOpacity","BarChart","Ionicons","jsx","_jsx","jsxs","_jsxs","colors","azureRadiance","AnalyticsScreen","_ref","navigation","_useState","_useState2","_slicedToArray","selectedPeriod","setSelectedPeriod","_useState3","_useState4","isLoadingChart","setIsLoadingChart","_useState5","_useState6","isLoadingInsights","setIsLoadingInsights","_useState7","_useState8","isLoadingExpenses","setIsLoadingExpenses","timePeriods","key","label","handlePeriodChange","period","setTimeout","getInsightData","labels","yearly","monthly","weekly","daily","multipliers","m","foodDining","change","direction","lastPeriod","thisPeriod","periodLabel","currentLabel","salary","transportation","getExpenseData","categories","name","icon","color","baseAmounts","baseTrans","amounts","transactions","maxAmount","Math","max","apply","_toConsumableArray","map","cat","i","category","amount","percentage","sort","a","b","generateHistoricalData","baseData","_baseData$period","income","expenses","Array","from","length","_","variance","random","periodName","Date","getFullYear","now","toLocaleDateString","month","getWeek","weekday","round","historicalData","maxValue","flatMap","d","insightData","expenseData","SkeletonRect","_ref2","width","height","style","backgroundColor","borderRadius","ChartSkeleton","styles","chartCard","children","alignSelf","marginBottom","justifyContent","flexDirection","alignItems","paddingHorizontal","fill","flex","marginHorizontal","chartLegend","legendItem","marginRight","InsightCardSkeleton","insightCard","cardHeader","comparisonContainer","Fragment","comparisonItem","comparisonDivider","ExpenseItemSkeleton","expenseItem","expenseDetails","expenseHeader","expenseProgressContainer","renderInsightCard","data","bgColor","title","subtitle","textColor","categoryIconContainer","size","cardHeaderText","cardTitle","changeIndicator","cardSubtitle","replace","comparisonLabel","comparisonAmount","toLocaleString","container","header","backButton","onPress","goBack","headerTitle","placeholder","periodSelectorContainer","periodSelector","periodButton","activePeriod","periodText","activePeriodText","chartTitle","item","legendColor","legendText","insightsSection","insightsHeading","index","charAt","toUpperCase","slice","expense","expenseIconContainer","expenseCategoryName","expenseAmount","progressBarBackground","progressBarFill","transactionCount","prototype","onejan","ceil","getTime","getDay","create","borderBottomWidth","borderBottomColor","paddingTop","paddingBottom","fontSize","fontWeight","paddingVertical","padding","margin","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","textAlign","marginTop","overflow","_NativeWindStyleSheet","atRules","topics"],"sources":["C:/Users/DeVelizH_003/Documents/budget-app/src/screens/AnalyticsScreen.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { View, Text, StyleSheet, ScrollView, TouchableOpacity, ActivityIndicator } from 'react-native';\r\nimport { NativeStackNavigationProp } from '@react-navigation/native-stack';\r\nimport { MainStackParamList } from '../navigation/types';\r\nimport BarChart from '../components/BarChart';\r\nimport { Ionicons } from '@expo/vector-icons';\r\n\r\n// Azure Radiance Color Theme\r\nconst colors = {\r\n  azureRadiance: {\r\n    50: '#eff5ff',\r\n    100: '#dbe8fe',\r\n    200: '#bfd7fe',\r\n    300: '#93bbfd',\r\n    400: '#609afa',\r\n    500: '#3b82f6',\r\n    600: '#2570eb',\r\n    700: '#1d64d8',\r\n    800: '#1e55af',\r\n    900: '#1e478a',\r\n    950: '#172e54',\r\n  }\r\n};\r\n\r\ntype Props = {\r\n  navigation: NativeStackNavigationProp<MainStackParamList, 'Analytics'>;\r\n};\r\n\r\ntype TimePeriod = 'yearly' | 'monthly' | 'weekly' | 'daily';\r\n\r\nexport default function AnalyticsScreen({ navigation }: Props) {\r\n  const [selectedPeriod, setSelectedPeriod] = useState<TimePeriod>('monthly');\r\n  const [isLoadingChart, setIsLoadingChart] = useState(false);\r\n  const [isLoadingInsights, setIsLoadingInsights] = useState(false);\r\n  const [isLoadingExpenses, setIsLoadingExpenses] = useState(false);\r\n\r\n  const timePeriods = [\r\n    { key: 'yearly' as TimePeriod, label: 'Yearly' },\r\n    { key: 'monthly' as TimePeriod, label: 'Monthly' },\r\n    { key: 'weekly' as TimePeriod, label: 'Weekly' },\r\n    { key: 'daily' as TimePeriod, label: 'Daily' },\r\n  ];\r\n\r\n  const handlePeriodChange = (period: TimePeriod) => {\r\n    if (period !== selectedPeriod) {\r\n      // Start loading all sections\r\n      setIsLoadingChart(true);\r\n      setIsLoadingInsights(true);\r\n      setIsLoadingExpenses(true);\r\n      setSelectedPeriod(period);\r\n      \r\n      // Simulate different loading times for each section\r\n      setTimeout(() => {\r\n        setIsLoadingChart(false);\r\n      }, 600);\r\n      \r\n      setTimeout(() => {\r\n        setIsLoadingInsights(false);\r\n      }, 900);\r\n      \r\n      setTimeout(() => {\r\n        setIsLoadingExpenses(false);\r\n      }, 1200);\r\n    }\r\n  };\r\n\r\n  const getInsightData = (period: TimePeriod) => {\r\n    const labels = {\r\n      yearly: ['Last Year', 'This Year'],\r\n      monthly: ['Last Month', 'This Month'],\r\n      weekly: ['Last Week', 'This Week'],\r\n      daily: ['Yesterday', 'Today']\r\n    };\r\n    const multipliers = { yearly: 1000, monthly: 100, weekly: 10, daily: 1 };\r\n    const m = multipliers[period];\r\n    \r\n    return {\r\n      foodDining: { change: 23, direction: 'increased', lastPeriod: 21.5 * m, thisPeriod: 26.45 * m, periodLabel: labels[period][0], currentLabel: labels[period][1] },\r\n      salary: { lastPeriod: 185 * m, thisPeriod: 192 * m, periodLabel: labels[period][0], currentLabel: labels[period][1] },\r\n      transportation: { change: 15, direction: 'decreased', lastPeriod: 18 * m, thisPeriod: 15.3 * m, periodLabel: labels[period][0], currentLabel: labels[period][1] }\r\n    };\r\n  };\r\n\r\n  const getExpenseData = (period: TimePeriod) => {\r\n    const categories = [\r\n      { name: 'Food & Dining', icon: 'restaurant', color: '#ef4444' },\r\n      { name: 'Transportation', icon: 'car', color: '#3b82f6' },\r\n      { name: 'Shopping', icon: 'bag', color: '#8b5cf6' },\r\n      { name: 'Entertainment', icon: 'game-controller', color: '#f59e0b' },\r\n      { name: 'Healthcare', icon: 'medical', color: '#10b981' },\r\n      { name: 'Utilities', icon: 'flash', color: '#6b7280' }\r\n    ];\r\n    \r\n    const baseAmounts = { yearly: [30444, 16848, 24000, 18000, 12000, 15600], monthly: [2645, 1530, 2100, 1500, 1000, 1300], weekly: [605, 386, 480, 350, 230, 300], daily: [115, 45, 80, 50, 0, 0] };\r\n    const baseTrans = { yearly: [365, 280, 96, 72, 24, 12], monthly: [28, 22, 8, 6, 2, 1], weekly: [7, 5, 2, 1, 1, 1], daily: [3, 2, 1, 1, 0, 0] };\r\n    \r\n    const amounts = baseAmounts[period];\r\n    const transactions = baseTrans[period];\r\n    const maxAmount = Math.max(...amounts);\r\n    \r\n    return categories.map((cat, i) => ({\r\n      category: cat.name,\r\n      amount: amounts[i],\r\n      transactions: transactions[i],\r\n      icon: cat.icon,\r\n      color: cat.color,\r\n      percentage: maxAmount > 0 ? (amounts[i] / maxAmount) * 100 : 0\r\n    })).sort((a, b) => b.amount - a.amount);\r\n  };\r\n\r\n  const generateHistoricalData = (period: TimePeriod) => {\r\n    const baseData = { yearly: [48000, 36000], monthly: [4000, 3000], weekly: [900, 700], daily: [130, 100] };\r\n    const [income, expenses] = baseData[period];\r\n    \r\n    return Array.from({ length: 6 }, (_, i) => {\r\n      const variance = 0.8 + Math.random() * 0.4;\r\n      const periodName = period === 'yearly' ? `${new Date().getFullYear() - (5 - i)}` :\r\n        period === 'monthly' ? new Date(Date.now() - (5 - i) * 30 * 24 * 60 * 60 * 1000).toLocaleDateString('en', { month: 'short' }) :\r\n        period === 'weekly' ? `W${Math.max(1, new Date().getWeek() - (5 - i))}` :\r\n        new Date(Date.now() - (5 - i) * 24 * 60 * 60 * 1000).toLocaleDateString('en', { weekday: 'short' });\r\n      \r\n      return {\r\n        period: periodName,\r\n        income: Math.round(income * variance),\r\n        expenses: Math.round(expenses * variance)\r\n      };\r\n    });\r\n  };\r\n\r\n  const historicalData = generateHistoricalData(selectedPeriod);\r\n  const maxValue = Math.max(...historicalData.flatMap(d => [d.income, d.expenses])) * 1.1;\r\n  const insightData = getInsightData(selectedPeriod);\r\n  const expenseData = getExpenseData(selectedPeriod);\r\n\r\n  const SkeletonRect = ({ width, height, style }: { width: number | string, height: number, style?: any }) => (\r\n    <View style={[{ width, height, backgroundColor: colors.azureRadiance[100], borderRadius: 8 }, style]} />\r\n  );\r\n\r\n  const ChartSkeleton = () => (\r\n    <View style={styles.chartCard}>\r\n      <SkeletonRect width=\"60%\" height={20} style={{ alignSelf: 'center', marginBottom: 20 }} />\r\n      <View style={{ height: 200, justifyContent: 'flex-end', flexDirection: 'row', alignItems: 'flex-end', paddingHorizontal: 20 }}>\r\n        {Array(6).fill(0).map((_, i) => (\r\n          <View key={i} style={{ flex: 1, alignItems: 'center', marginHorizontal: 4 }}>\r\n            <SkeletonRect width=\"70%\" height={60 + Math.random() * 80} style={{ marginBottom: 8 }} />\r\n            <SkeletonRect width=\"80%\" height={40 + Math.random() * 60} />\r\n          </View>\r\n        ))}\r\n      </View>\r\n      <View style={styles.chartLegend}>\r\n        {['Income', 'Expenses'].map((label, i) => (\r\n          <View key={label} style={styles.legendItem}>\r\n            <SkeletonRect width={12} height={12} style={{ borderRadius: 6, marginRight: 8 }} />\r\n            <SkeletonRect width={50 + i * 10} height={12} />\r\n          </View>\r\n        ))}\r\n      </View>\r\n    </View>\r\n  );\r\n\r\n  const InsightCardSkeleton = () => (\r\n    <View style={styles.insightCard}>\r\n      <View style={styles.cardHeader}>\r\n        <SkeletonRect width={40} height={40} style={{ borderRadius: 20, marginRight: 12 }} />\r\n        <View style={{ flex: 1 }}>\r\n          <SkeletonRect width=\"70%\" height={16} style={{ marginBottom: 8 }} />\r\n          <SkeletonRect width=\"50%\" height={14} />\r\n        </View>\r\n      </View>\r\n      <SkeletonRect width=\"100%\" height={14} style={{ marginBottom: 16 }} />\r\n      <View style={styles.comparisonContainer}>\r\n        {[0, 1].map(i => (\r\n          <React.Fragment key={i}>\r\n            <View style={styles.comparisonItem}>\r\n              <SkeletonRect width=\"80%\" height={12} style={{ marginBottom: 4 }} />\r\n              <SkeletonRect width=\"60%\" height={16} />\r\n            </View>\r\n            {i === 0 && <View style={styles.comparisonDivider} />}\r\n          </React.Fragment>\r\n        ))}\r\n      </View>\r\n    </View>\r\n  );\r\n\r\n  const ExpenseItemSkeleton = () => (\r\n    <View style={styles.expenseItem}>\r\n      <SkeletonRect width={48} height={48} style={{ borderRadius: 24, marginRight: 16 }} />\r\n      <View style={styles.expenseDetails}>\r\n        <View style={styles.expenseHeader}>\r\n          <SkeletonRect width=\"60%\" height={16} />\r\n          <SkeletonRect width=\"25%\" height={16} />\r\n        </View>\r\n        <View style={styles.expenseProgressContainer}>\r\n          <SkeletonRect width=\"80%\" height={6} style={{ borderRadius: 3, marginRight: 12 }} />\r\n          <SkeletonRect width={20} height={12} />\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n\r\n  const renderInsightCard = (data: any, icon: string, bgColor: string, title: string, subtitle: string, textColor?: string) => (\r\n    <View style={styles.insightCard}>\r\n      <View style={styles.cardHeader}>\r\n        <View style={[styles.categoryIconContainer, { backgroundColor: bgColor }]}>\r\n          <Ionicons name={icon as any} size={20} color={textColor || '#ef4444'} />\r\n        </View>\r\n        <View style={styles.cardHeaderText}>\r\n          <Text style={styles.cardTitle}>{title}</Text>\r\n          <Text style={[styles.changeIndicator, textColor && { color: textColor }]}>{subtitle}</Text>\r\n        </View>\r\n      </View>\r\n      <Text style={styles.cardSubtitle}>\r\n        {title === 'Salary & Wages' ? \r\n          `Your primary income source this ${selectedPeriod.replace('ly', '').replace('y', '')}, contributing 85% of total earnings` :\r\n          `${title === 'Transportation' ? (data.direction === 'decreased' ? 'Great job!' : 'Watch out!') + ' Your' : 'Your'} ${title} expenses ${data.direction} by ${data.change}% this ${selectedPeriod.replace('ly', '').replace('y', '')}`\r\n        }\r\n      </Text>\r\n      <View style={styles.comparisonContainer}>\r\n        <View style={styles.comparisonItem}>\r\n          <Text style={styles.comparisonLabel}>{data.periodLabel}</Text>\r\n          <Text style={styles.comparisonAmount}>₱{data.lastPeriod.toLocaleString()}</Text>\r\n        </View>\r\n        <View style={styles.comparisonDivider} />\r\n        <View style={styles.comparisonItem}>\r\n          <Text style={styles.comparisonLabel}>{data.currentLabel}</Text>\r\n          <Text style={[styles.comparisonAmount, { color: textColor || (data.direction === 'increased' ? '#ef4444' : '#10b981') }]}>\r\n            ₱{data.thisPeriod.toLocaleString()}\r\n          </Text>\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      {/* Header */}\r\n      <View style={styles.header}>\r\n        <TouchableOpacity \r\n          style={styles.backButton}\r\n          onPress={() => navigation.goBack()}\r\n        >\r\n          <Ionicons name=\"arrow-back\" size={24} color={colors.azureRadiance[600]} />\r\n        </TouchableOpacity>\r\n        <Text style={styles.headerTitle}>Analytics</Text>\r\n        <View style={styles.placeholder} />\r\n      </View>\r\n\r\n      {/* Period Selector */}\r\n      <View style={styles.periodSelectorContainer}>\r\n        <View style={styles.periodSelector}>\r\n          {timePeriods.map((period) => (\r\n            <TouchableOpacity\r\n              key={period.key}\r\n              style={[\r\n                styles.periodButton,\r\n                selectedPeriod === period.key && styles.activePeriod\r\n              ]}\r\n              onPress={() => handlePeriodChange(period.key)}\r\n            >\r\n              <Text style={[\r\n                styles.periodText,\r\n                selectedPeriod === period.key && styles.activePeriodText\r\n              ]}>\r\n                {period.label}\r\n              </Text>\r\n            </TouchableOpacity>\r\n          ))}\r\n        </View>\r\n      </View>\r\n\r\n      <ScrollView style={{ flex: 1 }}>\r\n        {/* Chart Section */}\r\n        {isLoadingChart ? (\r\n          <ChartSkeleton />\r\n        ) : (\r\n          <View style={styles.chartCard}>\r\n            <Text style={styles.chartTitle}>Income vs Expenses Trend</Text>\r\n            \r\n            <BarChart\r\n              data={historicalData}\r\n              maxValue={maxValue}\r\n              selectedPeriod={selectedPeriod}\r\n            />\r\n\r\n            <View style={styles.chartLegend}>\r\n              {[{ color: '#10b981', label: 'Income' }, { color: '#ef4444', label: 'Expenses' }].map(item => (\r\n                <View key={item.label} style={styles.legendItem}>\r\n                  <View style={[styles.legendColor, { backgroundColor: item.color }]} />\r\n                  <Text style={styles.legendText}>{item.label}</Text>\r\n                </View>\r\n              ))}\r\n            </View>\r\n          </View>\r\n        )}\r\n\r\n        {/* Analytics Insights Section */}\r\n        {isLoadingInsights ? (\r\n          <View style={styles.insightsSection}>\r\n            <SkeletonRect width=\"40%\" height={20} style={{ marginBottom: 16 }} />\r\n            {Array(3).fill(0).map((_, i) => <InsightCardSkeleton key={i} />)}\r\n          </View>\r\n        ) : (\r\n          <View style={styles.insightsSection}>\r\n            <Text style={styles.insightsHeading}>Spending Insights</Text>\r\n            {renderInsightCard(\r\n              insightData.foodDining,\r\n              'restaurant',\r\n              '#fef2f2',\r\n              'Food & Dining',\r\n              `${insightData.foodDining.direction === 'increased' ? '↗ Increased' : '↘ Decreased'} by ${insightData.foodDining.change}%`\r\n            )}\r\n            {renderInsightCard(\r\n              insightData.salary,\r\n              'briefcase',\r\n              '#f0fdf4',\r\n              'Salary & Wages',\r\n              'Largest Income',\r\n              '#10b981'\r\n            )}\r\n            {renderInsightCard(\r\n              insightData.transportation,\r\n              'car',\r\n              '#f0f9ff',\r\n              'Transportation',\r\n              `${insightData.transportation.direction === 'increased' ? '↗ Increased' : '↘ Decreased'} by ${insightData.transportation.change}%`,\r\n              colors.azureRadiance[500]\r\n            )}\r\n          </View>\r\n        )}\r\n\r\n        {/* Expense Breakdown by Category */}\r\n        {isLoadingExpenses ? (\r\n          <View style={styles.insightsSection}>\r\n            <SkeletonRect width=\"60%\" height={20} style={{ marginBottom: 16 }} />\r\n            {Array(6).fill(0).map((_, index) => <ExpenseItemSkeleton key={index} />)}\r\n          </View>\r\n        ) : (\r\n          <View style={styles.insightsSection}>\r\n            <Text style={styles.insightsHeading}>Your {selectedPeriod.charAt(0).toUpperCase() + selectedPeriod.slice(1)} Expenses</Text>\r\n            {expenseData.map((expense, index) => (\r\n              <View key={expense.category} style={[styles.expenseItem, index === expenseData.length - 1 && { marginBottom: 0 }]}>\r\n                <View style={[styles.expenseIconContainer, { backgroundColor: `${expense.color}15` }]}>\r\n                  <Ionicons name={expense.icon as any} size={24} color={expense.color} />\r\n                </View>\r\n                <View style={styles.expenseDetails}>\r\n                  <View style={styles.expenseHeader}>\r\n                    <Text style={styles.expenseCategoryName}>{expense.category}</Text>\r\n                    <Text style={styles.expenseAmount}>₱{expense.amount.toLocaleString()}</Text>\r\n                  </View>\r\n                  <View style={styles.expenseProgressContainer}>\r\n                    <View style={styles.progressBarBackground}>\r\n                      <View style={[styles.progressBarFill, { width: `${expense.percentage}%`, backgroundColor: expense.color }]} />\r\n                    </View>\r\n                    <Text style={styles.transactionCount}>{expense.transactions}</Text>\r\n                  </View>\r\n                </View>\r\n              </View>\r\n            ))}\r\n          </View>\r\n        )}\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n}\r\n\r\n// Add this helper to Date prototype or create a utility function\r\ndeclare global {\r\n  interface Date {\r\n    getWeek(): number;\r\n  }\r\n}\r\n\r\nDate.prototype.getWeek = function() {\r\n  const onejan = new Date(this.getFullYear(), 0, 1);\r\n  return Math.ceil((((this.getTime() - onejan.getTime()) / 86400000) + onejan.getDay() + 1) / 7);\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#eff5ff',\r\n  },\r\n  header: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: colors.azureRadiance[100],\r\n    paddingHorizontal: 16,\r\n    paddingTop: 60,\r\n    paddingBottom: 20,\r\n    backgroundColor: 'white',\r\n  },\r\n  backButton: {\r\n    width: 40,\r\n    height: 40,\r\n    borderRadius: 20,\r\n    backgroundColor: colors.azureRadiance[50],\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  headerTitle: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n    color: colors.azureRadiance[900],\r\n  },\r\n  placeholder: {\r\n    width: 40,\r\n  },\r\n  periodSelectorContainer: {\r\n    backgroundColor: 'white',\r\n    paddingHorizontal: 0,\r\n    paddingVertical: 16,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: colors.azureRadiance[100],\r\n  },\r\n  periodSelector: {\r\n    flexDirection: 'row',\r\n    marginHorizontal: 16,\r\n    backgroundColor: colors.azureRadiance[50],\r\n    borderRadius: 8,\r\n    padding: 4,\r\n  },\r\n  periodButton: {\r\n    flex: 1,\r\n    paddingVertical: 8,\r\n    alignItems: 'center',\r\n    borderRadius: 6,\r\n  },\r\n  activePeriod: {\r\n    backgroundColor: colors.azureRadiance[500],\r\n  },\r\n  periodText: {\r\n    fontSize: 14,\r\n    color: '#6b7280',\r\n  },\r\n  activePeriodText: {\r\n    color: 'white',\r\n    fontWeight: '600',\r\n  },\r\n  chartCard: {\r\n    margin: 16,\r\n    padding: 20,\r\n    backgroundColor: '#ffffff',\r\n    borderRadius: 16,\r\n    shadowColor: '#000',\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowOpacity: 0.1,\r\n    shadowRadius: 4,\r\n    elevation: 3,\r\n  },\r\n  chartTitle: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    marginBottom: 16,\r\n    textAlign: 'center',\r\n    color: colors.azureRadiance[700],\r\n  },\r\n  chartLegend: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-around',\r\n    marginTop: 16,\r\n  },\r\n  legendItem: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n  },\r\n  legendColor: {\r\n    width: 12,\r\n    height: 12,\r\n    borderRadius: 6,\r\n    marginRight: 8,\r\n  },\r\n  legendText: {\r\n    fontSize: 12,\r\n    color: '#6b7280',\r\n  },\r\n  insightsSection: {\r\n    backgroundColor: '#ffffff',\r\n    borderRadius: 16,\r\n    margin: 16,\r\n    padding: 20,\r\n  },\r\n  insightsHeading: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n    color: '#000',\r\n    marginBottom: 16,\r\n  },\r\n  insightCard: {\r\n    backgroundColor: '#ffffff',\r\n    borderRadius: 12,\r\n    padding: 16,\r\n    marginBottom: 12,\r\n    shadowColor: '#000',\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 2,\r\n    },\r\n    shadowOpacity: 0.1,\r\n    shadowRadius: 3.84,\r\n    elevation: 5,\r\n  },\r\n  cardHeader: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    marginBottom: 12,\r\n  },\r\n  categoryIconContainer: {\r\n    width: 40,\r\n    height: 40,\r\n    borderRadius: 20,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    marginRight: 12,\r\n  },\r\n  cardHeaderText: {\r\n    flex: 1,\r\n  },\r\n  cardTitle: {\r\n    fontSize: 16,\r\n    fontWeight: '600',\r\n    color: '#1f2937',\r\n    marginBottom: 4,\r\n  },\r\n  changeIndicator: {\r\n    fontSize: 14,\r\n    fontWeight: '500',\r\n    color: '#ef4444',\r\n  },\r\n  cardSubtitle: {\r\n    fontSize: 14,\r\n    color: '#6b7280',\r\n    marginBottom: 16,\r\n  },\r\n  comparisonContainer: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n  },\r\n  comparisonItem: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n  },\r\n  comparisonLabel: {\r\n    fontSize: 12,\r\n    color: '#9ca3af',\r\n    marginBottom: 4,\r\n  },\r\n  comparisonAmount: {\r\n    fontSize: 16,\r\n    fontWeight: '600',\r\n    color: '#1f2937',\r\n  },\r\n  comparisonDivider: {\r\n    width: 1,\r\n    height: 30,\r\n    backgroundColor: '#e5e7eb',\r\n    marginHorizontal: 16,\r\n  },\r\n  expenseItem: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    marginBottom: 16,\r\n  },\r\n  expenseIconContainer: {\r\n    width: 48,\r\n    height: 48,\r\n    borderRadius: 24,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    marginRight: 16,\r\n  },\r\n  expenseDetails: {\r\n    flex: 1,\r\n  },\r\n  expenseHeader: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginBottom: 8,\r\n  },\r\n  expenseCategoryName: {\r\n    fontSize: 16,\r\n    fontWeight: '600',\r\n    color: '#1f2937',\r\n  },\r\n  expenseAmount: {\r\n    fontSize: 16,\r\n    fontWeight: '700',\r\n    color: '#1f2937',\r\n  },\r\n  expenseProgressContainer: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n  },\r\n  progressBarBackground: {\r\n    flex: 1,\r\n    height: 6,\r\n    backgroundColor: '#f3f4f6',\r\n    borderRadius: 3,\r\n    marginRight: 12,\r\n    overflow: 'hidden',\r\n  },\r\n  progressBarFill: {\r\n    height: '100%',\r\n    borderRadius: 3,\r\n  },\r\n  transactionCount: {\r\n    fontSize: 12,\r\n    color: '#9ca3af',\r\n    fontWeight: '500',\r\n  },\r\n});\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}