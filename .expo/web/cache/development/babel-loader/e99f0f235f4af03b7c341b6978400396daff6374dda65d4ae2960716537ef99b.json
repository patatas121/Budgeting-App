{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { NativeWindStyleSheet as _NativeWindStyleSheet } from \"nativewind\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { useAuth } from \"../context/AuthContext\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isLoading = _useState6[0],\n    setIsLoading = _useState6[1];\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    emailError = _useState8[0],\n    setEmailError = _useState8[1];\n  var _useAuth = useAuth(),\n    login = _useAuth.login;\n  var validateEmail = function validateEmail(email) {\n    var emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return emailRegex.test(email);\n  };\n  var handleLogin = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      setEmailError('');\n      if (!validateEmail(email)) {\n        setEmailError('Please enter a valid email');\n        return;\n      }\n      if (!password) {\n        Alert.alert('Error', 'Please enter your password');\n        return;\n      }\n      setIsLoading(true);\n      try {\n        var _navigation$getParent;\n        yield login(email, password);\n        (_navigation$getParent = navigation.getParent()) == null ? void 0 : _navigation$getParent.reset({\n          index: 0,\n          routes: [{\n            name: 'MainApp'\n          }]\n        });\n      } catch (error) {\n        Alert.alert('Error', error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    });\n    return function handleLogin() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Welcome Back\"\n    }), _jsx(TextInput, {\n      style: [styles.input, emailError && styles.inputError],\n      placeholder: \"Email\",\n      value: email,\n      onChangeText: function onChangeText(text) {\n        setEmail(text);\n        setEmailError('');\n      },\n      keyboardType: \"email-address\",\n      autoCapitalize: \"none\",\n      editable: !isLoading\n    }), emailError ? _jsx(Text, {\n      style: styles.errorText,\n      children: emailError\n    }) : null, _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Password\",\n      value: password,\n      onChangeText: setPassword,\n      secureTextEntry: true,\n      editable: !isLoading\n    }), _jsx(TouchableOpacity, {\n      style: [styles.button, isLoading && styles.buttonDisabled],\n      onPress: handleLogin,\n      disabled: isLoading,\n      children: isLoading ? _jsx(ActivityIndicator, {\n        color: \"white\"\n      }) : _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Login\"\n      })\n    }), _jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        return navigation.navigate('Signup');\n      },\n      disabled: isLoading,\n      children: _jsx(Text, {\n        style: styles.linkText,\n        children: \"Don't have an account? Sign up\"\n      })\n    }), _jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        return navigation.navigate('ForgotPassword');\n      },\n      disabled: isLoading,\n      children: _jsx(Text, {\n        style: styles.forgotPasswordText,\n        children: \"Forgot Password?\"\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    paddingHorizontal: 32,\n    backgroundColor: 'white'\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 32,\n    textAlign: 'center'\n  },\n  input: {\n    backgroundColor: '#f3f4f6',\n    padding: 16,\n    borderRadius: 8,\n    marginBottom: 4\n  },\n  inputError: {\n    borderWidth: 1,\n    borderColor: '#ef4444'\n  },\n  errorText: {\n    color: '#ef4444',\n    fontSize: 14,\n    marginBottom: 16\n  },\n  button: {\n    backgroundColor: '#3b82f6',\n    padding: 16,\n    borderRadius: 8,\n    marginBottom: 16\n  },\n  buttonDisabled: {\n    opacity: 0.7\n  },\n  buttonText: {\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: 'bold'\n  },\n  linkText: {\n    color: '#3b82f6',\n    textAlign: 'center',\n    marginBottom: 16\n  },\n  forgotPasswordText: {\n    color: '#6b7280',\n    textAlign: 'center'\n  }\n});\n_NativeWindStyleSheet.create({\n  styles: {\n    \"container\": {\n      \"width\": \"100%\"\n    },\n    \"container@0\": {\n      \"maxWidth\": 640\n    },\n    \"container@1\": {\n      \"maxWidth\": 768\n    },\n    \"container@2\": {\n      \"maxWidth\": 1024\n    },\n    \"container@3\": {\n      \"maxWidth\": 1280\n    },\n    \"container@4\": {\n      \"maxWidth\": 1536\n    },\n    \"flex\": {\n      \"display\": \"flex\"\n    }\n  },\n  atRules: {\n    \"container\": [[[\"media\", \"(min-width: 640px)\"]], [[\"media\", \"(min-width: 768px)\"]], [[\"media\", \"(min-width: 1024px)\"]], [[\"media\", \"(min-width: 1280px)\"]], [[\"media\", \"(min-width: 1536px)\"]]]\n  },\n  topics: {\n    \"container\": [\"width\"]\n  }\n});","map":{"version":3,"names":["React","useState","View","Text","TextInput","TouchableOpacity","Alert","ActivityIndicator","StyleSheet","useAuth","jsx","_jsx","jsxs","_jsxs","LoginScreen","_ref","navigation","_useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","_useState5","_useState6","isLoading","setIsLoading","_useState7","_useState8","emailError","setEmailError","_useAuth","login","validateEmail","emailRegex","test","handleLogin","_ref2","_asyncToGenerator","alert","_navigation$getParent","getParent","reset","index","routes","name","error","message","apply","arguments","style","styles","container","children","title","input","inputError","placeholder","value","onChangeText","text","keyboardType","autoCapitalize","editable","errorText","secureTextEntry","button","buttonDisabled","onPress","disabled","color","buttonText","navigate","linkText","forgotPasswordText","create","flex","justifyContent","paddingHorizontal","backgroundColor","fontSize","fontWeight","marginBottom","textAlign","padding","borderRadius","borderWidth","borderColor","opacity","_NativeWindStyleSheet","atRules","topics"],"sources":["C:/Users/DeVelizH_003/Documents/budget-app/src/screens/LoginScreen.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, TextInput, TouchableOpacity, Alert, ActivityIndicator, StyleSheet } from 'react-native';\r\nimport { useAuth } from '../context/AuthContext';\r\nimport { NativeStackNavigationProp } from '@react-navigation/native-stack';\r\nimport { AuthStackParamList } from '../navigation/types';\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\ntype LoginScreenProps = {\r\n  navigation: NativeStackNavigationProp<AuthStackParamList, 'Login'>;\r\n};\r\n\r\nexport default function LoginScreen({ navigation }: LoginScreenProps) {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [emailError, setEmailError] = useState('');\r\n  const { login } = useAuth();\r\n\r\n  const validateEmail = (email: string) => {\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    return emailRegex.test(email);\r\n  };\r\n\r\n  const handleLogin = async () => {\r\n    setEmailError('');\r\n    if (!validateEmail(email)) {\r\n      setEmailError('Please enter a valid email');\r\n      return;\r\n    }\r\n    if (!password) {\r\n      Alert.alert('Error', 'Please enter your password');\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n    try {\r\n      await login(email, password);\r\n      // Use parent navigation to reset to main app\r\n      navigation.getParent()?.reset({\r\n        index: 0,\r\n        routes: [{ name: 'MainApp' }],\r\n      });\r\n    } catch (error: any) {\r\n      Alert.alert('Error', error.message);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.title}>Welcome Back</Text>\r\n      \r\n      <TextInput\r\n        style={[styles.input, emailError && styles.inputError]}\r\n        placeholder=\"Email\"\r\n        value={email}\r\n        onChangeText={(text) => {\r\n          setEmail(text);\r\n          setEmailError('');\r\n        }}\r\n        keyboardType=\"email-address\"\r\n        autoCapitalize=\"none\"\r\n        editable={!isLoading}\r\n      />\r\n      {emailError ? <Text style={styles.errorText}>{emailError}</Text> : null}\r\n      \r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder=\"Password\"\r\n        value={password}\r\n        onChangeText={setPassword}\r\n        secureTextEntry\r\n        editable={!isLoading}\r\n      />\r\n      \r\n      <TouchableOpacity\r\n        style={[styles.button, isLoading && styles.buttonDisabled]}\r\n        onPress={handleLogin}\r\n        disabled={isLoading}\r\n      >\r\n        {isLoading ? (\r\n          <ActivityIndicator color=\"white\" />\r\n        ) : (\r\n          <Text style={styles.buttonText}>Login</Text>\r\n        )}\r\n      </TouchableOpacity>\r\n      \r\n      <TouchableOpacity\r\n        onPress={() => navigation.navigate('Signup')}\r\n        disabled={isLoading}\r\n      >\r\n        <Text style={styles.linkText}>\r\n          Don't have an account? Sign up\r\n        </Text>\r\n      </TouchableOpacity>\r\n\r\n      <TouchableOpacity\r\n        onPress={() => navigation.navigate('ForgotPassword')}\r\n        disabled={isLoading}\r\n      >\r\n        <Text style={styles.forgotPasswordText}>\r\n          Forgot Password?\r\n        </Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    paddingHorizontal: 32,\r\n    backgroundColor: 'white',\r\n  },\r\n  title: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    marginBottom: 32,\r\n    textAlign: 'center',\r\n  },\r\n  input: {\r\n    backgroundColor: '#f3f4f6',\r\n    padding: 16,\r\n    borderRadius: 8,\r\n    marginBottom: 4,\r\n  },\r\n  inputError: {\r\n    borderWidth: 1,\r\n    borderColor: '#ef4444',\r\n  },\r\n  errorText: {\r\n    color: '#ef4444',\r\n    fontSize: 14,\r\n    marginBottom: 16,\r\n  },\r\n  button: {\r\n    backgroundColor: '#3b82f6',\r\n    padding: 16,\r\n    borderRadius: 8,\r\n    marginBottom: 16,\r\n  },\r\n  buttonDisabled: {\r\n    opacity: 0.7,\r\n  },\r\n  buttonText: {\r\n    color: 'white',\r\n    textAlign: 'center',\r\n    fontWeight: 'bold',\r\n  },\r\n  linkText: {\r\n    color: '#3b82f6',\r\n    textAlign: 'center',\r\n    marginBottom: 16,\r\n  },\r\n  forgotPasswordText: {\r\n    color: '#6b7280',\r\n    textAlign: 'center',\r\n  },\r\n});\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}