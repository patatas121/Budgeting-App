{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { NativeWindStyleSheet as _NativeWindStyleSheet } from \"nativewind\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { useAuth } from \"../context/AuthContext\";\nimport ScreenLoader from \"../components/ScreenLoader\";\nimport useScreenTransition from \"../hooks/useScreenTransition\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function SettingsScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useAuth = useAuth(),\n    logout = _useAuth.logout;\n  var _React$useState = React.useState(true),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    notificationsEnabled = _React$useState2[0],\n    setNotificationsEnabled = _React$useState2[1];\n  var _React$useState3 = React.useState(false),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    darkModeEnabled = _React$useState4[0],\n    setDarkModeEnabled = _React$useState4[1];\n  var isLoading = useScreenTransition(300);\n  if (isLoading) {\n    return _jsx(ScreenLoader, {\n      text: \"Loading Settings...\"\n    });\n  }\n  var handleLogout = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      Alert.alert(\"Logout\", \"Are you sure you want to logout?\", [{\n        text: \"Cancel\",\n        style: \"cancel\"\n      }, {\n        text: \"Logout\",\n        style: \"destructive\",\n        onPress: function () {\n          var _onPress = _asyncToGenerator(function* () {\n            try {\n              var _navigation$getParent;\n              yield logout();\n              (_navigation$getParent = navigation.getParent()) == null ? void 0 : _navigation$getParent.reset({\n                index: 0,\n                routes: [{\n                  name: 'Auth'\n                }]\n              });\n            } catch (error) {\n              Alert.alert('Error', 'Failed to logout');\n            }\n          });\n          function onPress() {\n            return _onPress.apply(this, arguments);\n          }\n          return onPress;\n        }()\n      }]);\n    });\n    return function handleLogout() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.section,\n      children: [_jsx(Text, {\n        style: styles.sectionTitle,\n        children: \"Account\"\n      }), _jsx(TouchableOpacity, {\n        style: styles.item,\n        children: _jsx(Text, {\n          style: styles.itemText,\n          children: \"Edit Profile\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: styles.item,\n        children: _jsx(Text, {\n          style: styles.itemText,\n          children: \"Change Password\"\n        })\n      })]\n    }), _jsxs(View, {\n      style: styles.section,\n      children: [_jsx(Text, {\n        style: styles.sectionTitle,\n        children: \"Preferences\"\n      }), _jsxs(View, {\n        style: styles.item,\n        children: [_jsx(Text, {\n          style: styles.itemText,\n          children: \"Notifications\"\n        }), _jsx(Switch, {\n          value: notificationsEnabled,\n          onValueChange: setNotificationsEnabled\n        })]\n      }), _jsxs(View, {\n        style: styles.item,\n        children: [_jsx(Text, {\n          style: styles.itemText,\n          children: \"Dark Mode\"\n        }), _jsx(Switch, {\n          value: darkModeEnabled,\n          onValueChange: setDarkModeEnabled\n        })]\n      })]\n    }), _jsx(TouchableOpacity, {\n      style: styles.logoutButton,\n      onPress: handleLogout,\n      children: _jsx(Text, {\n        style: styles.logoutText,\n        children: \"Logout\"\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f3f4f6'\n  },\n  section: {\n    marginTop: 16,\n    backgroundColor: 'white',\n    paddingVertical: 8\n  },\n  sectionTitle: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: '#6b7280',\n    paddingHorizontal: 16,\n    paddingVertical: 8\n  },\n  item: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingVertical: 12,\n    paddingHorizontal: 16,\n    borderBottomWidth: 1,\n    borderBottomColor: '#f3f4f6'\n  },\n  itemText: {\n    fontSize: 16\n  },\n  logoutButton: {\n    margin: 16,\n    padding: 16,\n    backgroundColor: '#ef4444',\n    borderRadius: 8,\n    alignItems: 'center'\n  },\n  logoutText: {\n    color: 'white',\n    fontWeight: 'bold',\n    fontSize: 16\n  }\n});\n_NativeWindStyleSheet.create({\n  styles: {\n    \"container\": {\n      \"width\": \"100%\"\n    },\n    \"container@0\": {\n      \"maxWidth\": 640\n    },\n    \"container@1\": {\n      \"maxWidth\": 768\n    },\n    \"container@2\": {\n      \"maxWidth\": 1024\n    },\n    \"container@3\": {\n      \"maxWidth\": 1280\n    },\n    \"container@4\": {\n      \"maxWidth\": 1536\n    },\n    \"flex\": {\n      \"display\": \"flex\"\n    }\n  },\n  atRules: {\n    \"container\": [[[\"media\", \"(min-width: 640px)\"]], [[\"media\", \"(min-width: 768px)\"]], [[\"media\", \"(min-width: 1024px)\"]], [[\"media\", \"(min-width: 1280px)\"]], [[\"media\", \"(min-width: 1536px)\"]]]\n  },\n  topics: {\n    \"container\": [\"width\"]\n  }\n});","map":{"version":3,"names":["React","View","Text","TouchableOpacity","StyleSheet","Switch","Alert","useAuth","ScreenLoader","useScreenTransition","jsx","_jsx","jsxs","_jsxs","SettingsScreen","_ref","navigation","_useAuth","logout","_React$useState","useState","_React$useState2","_slicedToArray","notificationsEnabled","setNotificationsEnabled","_React$useState3","_React$useState4","darkModeEnabled","setDarkModeEnabled","isLoading","text","handleLogout","_ref2","_asyncToGenerator","alert","style","onPress","_onPress","_navigation$getParent","getParent","reset","index","routes","name","error","apply","arguments","styles","container","children","section","sectionTitle","item","itemText","value","onValueChange","logoutButton","logoutText","create","flex","backgroundColor","marginTop","paddingVertical","fontSize","fontWeight","color","paddingHorizontal","flexDirection","justifyContent","alignItems","borderBottomWidth","borderBottomColor","margin","padding","borderRadius","_NativeWindStyleSheet","atRules","topics"],"sources":["C:/Users/DeVelizH_003/Documents/budget-app/src/screens/SettingsScreen.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { View, Text, TouchableOpacity, StyleSheet, Switch, Alert, ActivityIndicator } from 'react-native';\r\nimport { NativeStackNavigationProp } from '@react-navigation/native-stack';\r\nimport { MainStackParamList } from '../navigation/types';\r\nimport { useAuth } from '../context/AuthContext';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport ScreenLoader from '../components/ScreenLoader';\r\nimport useScreenTransition from '../hooks/useScreenTransition';\r\n\r\ntype Props = {\r\n  navigation: NativeStackNavigationProp<MainStackParamList, 'Settings'>;\r\n};\r\n\r\nexport default function SettingsScreen({ navigation }: Props) {\r\n  const { logout } = useAuth();\r\n  const [notificationsEnabled, setNotificationsEnabled] = React.useState(true);\r\n  const [darkModeEnabled, setDarkModeEnabled] = React.useState(false);\r\n  const isLoading = useScreenTransition(300);\r\n\r\n  if (isLoading) {\r\n    return <ScreenLoader text=\"Loading Settings...\" />;\r\n  }\r\n\r\n  const handleLogout = async () => {\r\n    Alert.alert(\r\n      \"Logout\",\r\n      \"Are you sure you want to logout?\",\r\n      [\r\n        { text: \"Cancel\", style: \"cancel\" },\r\n        { \r\n          text: \"Logout\",\r\n          style: \"destructive\",\r\n          onPress: async () => {\r\n            try {\r\n              await logout();\r\n              navigation.getParent()?.reset({\r\n                index: 0,\r\n                routes: [{ name: 'Auth' }],\r\n              });\r\n            } catch (error) {\r\n              Alert.alert('Error', 'Failed to logout');\r\n            }\r\n          }\r\n        }\r\n      ]\r\n    );\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.section}>\r\n        <Text style={styles.sectionTitle}>Account</Text>\r\n        <TouchableOpacity style={styles.item}>\r\n          <Text style={styles.itemText}>Edit Profile</Text>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity style={styles.item}>\r\n          <Text style={styles.itemText}>Change Password</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n\r\n      <View style={styles.section}>\r\n        <Text style={styles.sectionTitle}>Preferences</Text>\r\n        <View style={styles.item}>\r\n          <Text style={styles.itemText}>Notifications</Text>\r\n          <Switch\r\n            value={notificationsEnabled}\r\n            onValueChange={setNotificationsEnabled}\r\n          />\r\n        </View>\r\n        <View style={styles.item}>\r\n          <Text style={styles.itemText}>Dark Mode</Text>\r\n          <Switch\r\n            value={darkModeEnabled}\r\n            onValueChange={setDarkModeEnabled}\r\n          />\r\n        </View>\r\n      </View>\r\n\r\n      <TouchableOpacity \r\n        style={styles.logoutButton}\r\n        onPress={handleLogout}\r\n      >\r\n        <Text style={styles.logoutText}>Logout</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#f3f4f6',\r\n  },\r\n  section: {\r\n    marginTop: 16,\r\n    backgroundColor: 'white',\r\n    paddingVertical: 8,\r\n  },\r\n  sectionTitle: {\r\n    fontSize: 16,\r\n    fontWeight: '600',\r\n    color: '#6b7280',\r\n    paddingHorizontal: 16,\r\n    paddingVertical: 8,\r\n  },\r\n  item: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    paddingVertical: 12,\r\n    paddingHorizontal: 16,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: '#f3f4f6',\r\n  },\r\n  itemText: {\r\n    fontSize: 16,\r\n  },\r\n  logoutButton: {\r\n    margin: 16,\r\n    padding: 16,\r\n    backgroundColor: '#ef4444',\r\n    borderRadius: 8,\r\n    alignItems: 'center',\r\n  },\r\n  logoutText: {\r\n    color: 'white',\r\n    fontWeight: 'bold',\r\n    fontSize: 16,\r\n  },\r\n});\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}